name: Release

on:
  push:
    tags:
      - '*'

env:
  SCALA_BINARY_VERSION: "2.13.3"
  GH_JAVA_VERSION: "adopt@1.11"


jobs:
  gh-release:

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.4
      - uses: olafurpg/setup-scala@v10
        with:
          java-version: ${{ env.GH_JAVA_VERSION }}

      - name: Cache SBT
        uses: actions/cache@v2
        with:
          path: |
            ~/.ivy2/cache
            ~/.cache/coursier
            ~/.sbt
          key: ${{ runner.os }}-sbt-${{ env.SCALA_BINARY_VERSION }}-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('**/build.properties') }}
          restore-keys: |
            ${{ runner.os }}-sbt-${{ env.SCALA_BINARY_VERSION }}-

      - name: sbt GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_AUTH_TOKEN }}
        run: |
          echo "Run] sbt GitHub release"
          echo "mkdir -p dotty-docs"
          mkdir -p dotty-docs
          export SOURCE_DATE_EPOCH=$(date +%s)
          echo "SOURCE_DATE_EPOCH=$SOURCE_DATE_EPOCH"
          echo 'sbt -J-Xmx2048m clean +test +packagedArtifacts gitHubRelease'
          sbt \
            -J-Xmx2048m \
            devOopsGitHubRelease

  publish:
    needs: gh-release

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 0
      - uses: olafurpg/setup-scala@v10
        with:
          java-version: ${{ env.GH_JAVA_VERSION }}
      - uses: olafurpg/setup-gpg@v3

      - name: Cache SBT
        uses: actions/cache@v2
        with:
          path: |
            ~/.ivy2/cache
            ~/.cache/coursier
            ~/.sbt
          key: ${{ runner.os }}-sbt-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('**/build.properties') }}
          restore-keys: |
            ${{ runner.os }}-sbt

      - name: "sbt ci-release - ${{ github.run_number }}"
        env:
          PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
          PGP_SECRET: ${{ secrets.PGP_SECRET }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_AUTH_TOKEN }}
        run: |
          echo "Run] sbt ci-release"
          export SOURCE_DATE_EPOCH=$(date +%s)
          echo "SOURCE_DATE_EPOCH=$SOURCE_DATE_EPOCH"
          echo 'sbt -J-Xmx2048m -v clean +test +packagedArtifacts ci-release devOopsGitHubReleaseUploadArtifacts'
          sbt \
            -J-XX:MaxMetaspaceSize=1024m \
            -J-Xmx2048m \
            -v \
            clean \
            +test \
            +packagedArtifacts \
            ci-release \
            devOopsGitHubReleaseUploadArtifacts
